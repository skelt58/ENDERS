<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.enders.ums.sys.cod.dao.UserCodeMapper">	

	<select id="getUserCodeGroupList" parameterType="userCodeGroupVO" resultType="userCodeGroupVO">
 	 	SELECT *
		  FROM (	
			SELECT UILANG
				 , CD_GRP
				 , CD_GRP_NM
				 , (SELECT CD_GRP FROM NEO_CD_GRP WHERE A.UP_CD_GRP = CD_GRP AND A.UILANG = UILANG) AS UP_CD_GRP
				 , (SELECT CD_GRP_NM FROM NEO_CD_GRP WHERE A.UP_CD_GRP = CD_GRP AND A.UILANG = UILANG) AS UP_CD_GRP_NM
				 , USE_YN
				 , NVL(SYS_YN, 'N') AS SYS_YN
				 , CD_GRP_DTL			 
				 , ROW_NUMBER() OVER (ORDER BY CD_GRP, CD_GRP_NM) SEQ
				 , COUNT(1) OVER() TOTAL_COUNT				 
			  FROM NEO_CD_GRP A
			  WHERE A.UILANG = #{searchUiLang}
					<if test="searchCdGrp != null and searchCdGrp != ''">
					AND UPPER(A.CD_GRP) LIKE '%' || #{searchCdGrp} || '%'
					</if>
					<if test="searchCdGrpNm != null and searchCdGrpNm != ''">
					AND UPPER(A.CD_GRP_NM) LIKE '%' || #{searchCdGrpNm} || '%'
					</if>
			)
		 WHERE SEQ BETWEEN (#{page}-1)*#{rows}+1 AND #{page}*#{rows}
	</select>
	
	<select id="getUserCodeGroupInfo" parameterType="userCodeGroupVO" resultType="userCodeGroupVO">
		SELECT UILANG
			 , CD_GRP
			 , CD_GRP_NM
			 , CD_GRP_DTL
			 , (SELECT CD_GRP FROM NEO_CD_GRP WHERE A.UP_CD_GRP = CD_GRP AND A.UILANG = UILANG) AS UP_CD_GRP
			 , (SELECT CD_GRP_NM FROM NEO_CD_GRP WHERE A.UP_CD_GRP = CD_GRP AND A.UILANG = UILANG) AS UP_CD_GRP_NM
			 , USE_YN
			 , NVL(SYS_YN, 'N') AS SYS_YN
		  FROM NEO_CD_GRP A
		 WHERE UILANG = #{uilang}
		   AND UPPER(CD_GRP) = #{cdGrp}
	</select>
		
	<select id="getCodeCountUnderCodeGroup" parameterType="userCodeGroupVO" resultType="_int">
		SELECT COUNT(*) AS REC_CNT
		  FROM NEO_CD 
		 WHERE UILANG = #{uilang}
		   AND UPPER(CD_GRP) = #{cdGrp}
	</select>
	
	<select id="getCodeGroupCountByCodeGroup" parameterType="userCodeGroupVO" resultType="_int">
		SELECT COUNT(*) AS REC_CNT
		  FROM NEO_CD_GRP
		 WHERE UILANG = #{uilang}
		   AND UPPER(CD_GRP) = #{cdGrp}
	</select>

	<select id="getCodeGroupCountByCodeGroupNm" parameterType="userCodeGroupVO" resultType="_int">
		SELECT COUNT(*) AS REC_CNT
		  FROM NEO_CD_GRP 
		 WHERE UILANG = #{uilang}
		   AND CD_GRP_NM = #{cdGrpNm}
	</select>
			
	<insert id="insertUserCodeGroupInfo" parameterType="userCodeGroupVO">
		INSERT INTO NEO_CD_GRP
		(
			  UILANG
			, CD_GRP
			, CD_GRP_NM
			, CD_GRP_DTL
			, UP_CD_GRP
			, USE_YN
			, SYS_YN
		)
		VALUES
		(
			  #{uilang}
			, #{cdGrp}
			, #{cdGrpNm}
			, #{cdGrpDtl}
			, #{upCdGrp}
			, #{useYn}
			, #{sysYn}
		)
	</insert>
	
	<update id="updateUserCodeGroupInfo" parameterType="userCodeGroupVO">
		UPDATE NEO_CD_GRP
		   SET CD_GRP_NM = #{cdGrpNm}
			 , CD_GRP_DTL = #{cdGrpDtl}
			 , UP_CD_GRP = #{upCdGrp}
			 , USE_YN = #{useYn}
			 , SYS_YN = #{sysYn}			 
		 WHERE UILANG = #{uilang}
		   AND UPPER(CD_GRP) = #{cdGrp}
	</update>
	
	<delete id="deleteUserCodeGroupInfo" parameterType="userCodeGroupVO">
		DELETE FROM NEO_CD_GRP
		 WHERE CD_GRP = #{cdGrp}
		   AND UILANG = #{uilang}
	</delete>
	 
	<select id="getUserCodeList" parameterType="userCodeVO" resultType="userCodeVO">
		SELECT *
		  FROM (	
				SELECT A.UILANG
					 , A.CD
					 , A.CD_NM
					 , B.CD_GRP
					 , B.CD_GRP_NM
					 , (SELECT CD FROM NEO_CD WHERE A.UP_CD = CD AND A.UILANG = UILANG) AS UP_CD
					 , (SELECT CD_NM FROM NEO_CD WHERE A.UP_CD = CD AND A.UILANG = UILANG) AS UP_CD_NM
					 , NVL(CD_DTL, '') AS CD_DTL
					 , USE_YN
					 , ROW_NUMBER() OVER (ORDER BY A.CD_GRP, A.CD, A.CD_NM) SEQ
					 , COUNT(1) OVER() TOTAL_COUNT
				  FROM NEO_CD A, NEO_CD_GRP B
				 WHERE A.UILANG = #{searchUiLang}
				   AND A.CD_GRP = B.CD_GRP
				   AND A.UILANG = B.UILANG
				   <if test="searchCdGrp != null and searchCdGrp != ''">
				   AND UPPER(A.CD_GRP) LIKE '%' || #{searchCdGrp} || '%'
				   </if>				   
				   <if test="searchCd != null and searchCd != ''">
				   AND UPPER(A.CD) LIKE '%' || #{searchCd} || '%'
				   </if>
				   <if test="searchCdNm != null and searchCdNm != ''">
				   AND UPPER(A.CD_NM) LIKE '%' || #{searchCdNm} || '%'
				   </if>
				)
		 WHERE SEQ BETWEEN (#{page}-1)*#{rows}+1 AND #{page}*#{rows}
	</select>
	
	<select id="getUserCodeInfo" parameterType="userCodeVO" resultType="userCodeVO">
				SELECT A.UILANG
					 , A.CD
					 , A.CD_NM
					 , B.CD_GRP
					 , B.CD_GRP_NM
					 , (SELECT CD FROM NEO_CD WHERE A.UP_CD = CD AND A.UILANG = UILANG) AS UP_CD
					 , (SELECT CD_NM FROM NEO_CD WHERE A.UP_CD = CD AND A.UILANG = UILANG) AS UP_CD_NM	
					 , NVL(CD_DTL, '') AS CD_DTL
					 , USE_YN
				  FROM NEO_CD A, NEO_CD_GRP B
				 WHERE A.UILANG = #{uilang}
				   AND A.CD_GRP = B.CD_GRP
				   AND A.UILANG = B.UILANG
				   AND UPPER(A.CD_GRP) =  #{searchCdGrp}
				   AND UPPER(A.CD) = #{searchCd}
	</select>
		
	<select id="getCodeCountByCode" parameterType="userCodeVO" resultType="_int">
		SELECT COUNT(*) AS REC_CNT
		  FROM NEO_CD
		 WHERE UILANG = #{uilang}
		   AND CD = #{cd}
	</select>
	
	<select id="getCodeCountByCodeNm" parameterType="userCodeVO" resultType="_int">
		SELECT COUNT(*) AS REC_CNT
		  FROM NEO_CD
		 WHERE UILANG = #{uilang}
		   AND CD_NM = #{cdNm}
	</select>
			
	<insert id="insertUserCodeInfo" parameterType="userCodeVO">
		INSERT INTO NEO_CD
		(
			  UILANG
			, CD_GRP
			, CD
			, CD_NM
			, CD_DTL
			, UP_CD			
			, USE_YN
		)
		VALUES
		(
			  #{uilang}
			, #{cdGrp}
			, #{cd}
			, #{cdNm}
			, #{cdDtl}
			, #{upCd}
			, #{useYn}
		)
	</insert>
	
	<update id="updateUserCodeInfo" parameterType="userCodeVO">
		UPDATE NEO_CD
		   SET CD_NM   = #{cdNm}
			 , CD_DTL  = #{cdDtl}
			 , USE_YN  = #{useYn}
		 WHERE UILANG  = #{uilang}
		   AND CD_GRP  = #{cdGrp}
		   AND CD      = #{cd}
	</update>
	
	<delete id="deleteUserCodeInfo" parameterType="userCodeVO">
		DELETE FROM NEO_CD
		 WHERE CD_GRP = #{cdGrp}
		   AND CD     = #{cd}
	</delete>
		
</mapper>