<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.enders.ums.sys.dbc.dao.DBConnMapper">	
	<!-- DB Conntion 목록 조회 -->
	<select id="getDbConnList" parameterType="dbConnVO" resultType="dbConnVO">
		SELECT *
		  FROM (
				SELECT A.DB_CONN_NO
		 			 , A.DB_CONN_NM
		 			 , A.DB_TY
		 			 , A.DB_DRIVER
		 			 , A.DB_URL
		 			 , A.DB_CHAR_SET
		 			 , A.LOGIN_ID
		 			 , A.STATUS
		 			 , A.REG_ID
		 			 , A.REG_DT
		 			 , A.UP_ID
		 			 , A.UP_DT
		 			 , B.CD_NM DB_TY_NM
		 			 , C.CD_NM DB_CHAR_SET_NM
		 			 , D.CD_NM STATUS_NM
					 , ROW_NUMBER() OVER (ORDER BY A.DB_CONN_NO) SEQ
					 , COUNT(1) OVER() TOTAL_COUNT
				  FROM NEO_DBCONN A
					 , (
						SELECT CD, CD_NM
						  FROM NEO_CD
						 WHERE CD_GRP = 'C033'
						   AND UILANG = #{uilang}
						   AND USE_YN = 'Y'
						) B
					 , (
						SELECT CD, CD_NM
						  FROM NEO_CD
						 WHERE CD_GRP = 'C032'
						   AND UILANG = #{uilang}
						   AND USE_YN = 'Y'
						) C
					 , (
						SELECT CD, CD_NM
						  FROM NEO_CD
						 WHERE CD_GRP = 'C011'
						   AND UILANG = #{uilang}
						   AND USE_YN = 'Y'
						) D
				 WHERE A.DB_TY = B.CD
				   AND A.DB_CHAR_SET = C.CD
				   AND A.STATUS = D.CD
				   <if test="searchDbConnNm != null and searchDbConnNm != ''">
				   AND A.DB_CONN_NM LIKE '%' || #{searchDbConnNm} || '%'
				   </if>
				   <if test="searchDbTy != null and searchDbTy != ''">
				   AND A.DB_TY = #{searchDbTy}
				   </if>
				   <if test="searchStatus != null and searchStatus != ''">
				   AND A.STATUS = #{searchStatus}
				   </if>
			   )
		 WHERE SEQ BETWEEN (#{page}-1)*#{rows}+1 AND #{page}*#{rows}
	</select>
	
	<!-- DB Conntion 정보 조회 -->
	<select id="getDbConnInfo" parameterType="dbConnVO" resultType="dbConnVO">
		SELECT A.DB_CONN_NO
			 , A.DB_CONN_NM
			 , A.DB_TY
			 , A.DB_DRIVER
			 , A.DB_URL
			 , A.DB_CHAR_SET
			 , A.LOGIN_ID
			 , A.LOGIN_PWD
			 , A.DB_CONN_DESC
			 , A.STATUS
			 , A.REG_ID
			 , A.REG_DT
			 , A.UP_ID
			 , A.UP_DT
			 , B.CD_NM DB_TY_NM
			 , C.CD_NM DB_CHAR_SET_NM
			 , D.CD_NM STATUS_NM
		  FROM NEO_DBCONN A
			 , (
				SELECT CD, CD_NM
				  FROM NEO_CD
				 WHERE CD_GRP = 'C033'
				   AND UILANG = #{uilang}
				   AND USE_YN = 'Y') B
			 , (
				SELECT CD, CD_NM
				  FROM NEO_CD
				 WHERE CD_GRP = 'C032'
				   AND UILANG = #{uilang}
				   AND USE_YN = 'Y') C
			 , (
				SELECT CD, CD_NM
				  FROM NEO_CD
				 WHERE CD_GRP = 'C011'
				   AND UILANG = #{uilang}
				   AND USE_YN = 'Y') D
		 WHERE A.DB_CONN_NO = #{dbConnNo}
		   AND A.DB_TY = B.CD
		   AND A.DB_CHAR_SET = C.CD
		   AND A.STATUS = D.CD
	</select>
	
	<!-- DB Conntion 정보 등록 -->
	<insert id="insertDbConnInfo" parameterType="dbConnVO">
		INSERT INTO NEO_DBCONN
		(
			  DB_CONN_NO
			, DB_CONN_NM
			, DB_TY
			, DB_DRIVER
			, DB_URL
			, DB_CHAR_SET
			, LOGIN_ID
			, LOGIN_PWD
			, DB_CONN_DESC
			, STATUS
			, REG_ID
			, REG_DT
		)
		VALUES
		(
			  NEO_DBCONN_SEQ.NEXTVAL
			, #{dbConnNm}
			, #{dbTy}
			, #{dbDriver}
			, #{dbUrl}
			, #{dbCharSet}
			, #{loginId}
			, #{loginPwd}
			, #{dbConnDesc}
			, #{status}
			, #{regId}
			, #{regDt}
		)
	</insert>
	
	<!-- DB Conntion 정보 수정 -->
	<update id="updateDbConnInfo" parameterType="dbConnVO">
		UPDATE NEO_DBCONN
		   SET
			   DB_CONN_NM   = #{dbConnNm}
			 , DB_TY        = #{dbTy}
			 , DB_DRIVER    = #{dbDriver}
			 , DB_URL       = #{dbUrl}
			 , DB_CHAR_SET  = #{dbCharSet}
			 , LOGIN_ID     = #{loginId}
			 , LOGIN_PWD    = #{loginPwd}
			 , DB_CONN_DESC = #{dbConnDesc}
			 , STATUS       = #{status}
			 , UP_ID        = #{upId}
			 , UP_DT        = #{upDt}
		 WHERE DB_CONN_NO   = #{dbConnNo}
	</update>
	
	<!-- DB Connection 사용권한 목록 조회 -->
	<select id="getDbConnPermList" parameterType="dbConnPermVO" resultType="dbConnPermVO">
		SELECT A.USER_ID
			 , B.DEPT_NM
			 , A.DEPT_NO
			 , (
				CASE WHEN (
							SELECT DISTINCT 'Y'
							  FROM NEO_DBCONN_PERM
							 WHERE DB_CONN_NO = #{dbConnNo}
							   AND USER_ID = A.USER_ID
							) IS NULL
					 THEN 'N' ELSE 'Y' END) PERM_YN
		  FROM NEO_USER A
			 , NEO_DEPT B
		 WHERE B.STATUS = '000'
		   AND A.DEPT_NO = B.DEPT_NO
		 ORDER BY B.DEPT_NM, A.USER_ID
	</select>
	
	<!-- DB Connection 사용권한 정보 삭제 -->
	<delete id="deleteDbConnPermInfo" parameterType="dbConnPermVO">
		DELETE FROM NEO_DBCONN_PERM
		 WHERE DB_CONN_NO = #{dbConnNo}
	</delete>
	
	<!-- DB Connection 사용권한 정보 등록 -->
	<insert id="insertDbConnPermInfo" parameterType="dbConnPermVO">
		INSERT INTO NEO_DBCONN_PERM
		(
			  DB_CONN_NO
			, USER_ID
		)
		VALUES
		(
			  #{dbConnNo}
			, #{userId}
		)
	</insert>




	<!-- #############################################################  메타 테이블 데이터 처리  ############################################################# -->
	<!-- 메타 테이블 목록 조회 -->
	<select id="getMetaTableList" parameterType="dbConnVO" resultType="metaTableVO">
		SELECT TBL_NO
			 , DB_CONN_NO
			 , TBL_NM
			 , TBL_DESC
			 , TBL_ALIAS
		  FROM NEO_METATABLE
		 WHERE DB_CONN_NO = #{dbConnNo}
		 ORDER BY TBL_NM
	</select>
	
	<!-- 메타 테이블 정보 등록 -->
	<insert id="insertMetaTableInfo" parameterType="metaTableVO">
		INSERT INTO NEO_METATABLE
		(
			  TBL_NO
			, DB_CONN_NO
			, TBL_NM
			, TBL_DESC
			, TBL_ALIAS
		)
		VALUES
		(
			  NEO_METATABLE_SEQ.NEXTVAL
			, #{dbConnNo}
			, #{tblNm}
			, #{tblDesc}
			, #{tblAlias}
		)
	</insert>
	
	<!-- 등록시 입력된 메타 테이블 번호 조회 -->
	<select id="getMetaTableSeq" resultType="_int">
		SELECT NEO_METATABLE_SEQ.CURRVAL SEQ FROM DUAL
	</select>
	
	<!-- 메타 테이블 정보 조회 -->
	<select id="getMetaTableInfo" parameterType="metaTableVO" resultType="metaTableVO">
		SELECT DB_CONN_NO
			 , TBL_NM
			 , TBL_DESC
			 , TBL_ALIAS
		  FROM NEO_METATABLE
		 WHERE TBL_NO = #{tblNo}
	</select>
	
	<!-- 메타 테이블 정보 수정 -->
	<update id="updateMetaTableInfo" parameterType="metaTableVO">
		UPDATE NEO_METATABLE
		   SET
			   TBL_NM    = #{tblNm}
			 , TBL_ALIAS = #{tblAlias}
			 , TBL_DESC  = #{tblDesc}
		 WHERE TBL_NO    = #{tblNo}
	</update>
	
	<!-- 메타 테이블 삭제 : 관계식 삭제 -> 관계값 삭제 -> 메타컬럼 삭제 -> 메타테이블 삭제 -->
	<delete id="deleteMetaTableOperator" parameterType="metaTableVO">
		DELETE FROM NEO_OPERATOR
		 WHERE COL_NO IN (
		 					SELECT COL_NO
							  FROM NEO_METACOLUMN
							 WHERE TBL_NO = #{tblNo}
						)
	</delete>
	<delete id="deleteMetaTableValue" parameterType="metaTableVO">
		DELETE FROM NEO_VALUE
		 WHERE COL_NO IN (
		 					SELECT COL_NO
							  FROM NEO_METACOLUMN
							 WHERE TBL_NO = #{tblNo}
						)
	</delete>
	<delete id="deleteMetaTableColumn" parameterType="metaTableVO">
		DELETE FROM NEO_METACOLUMN
		 WHERE TBL_NO = #{tblNo}
	</delete>
	<delete id="deleteMetaTableInfo" parameterType="metaTableVO">
		DELETE FROM NEO_METATABLE
		 WHERE TBL_NO = #{tblNo}
	</delete>
	






	<!-- #############################################################  메타 컬럼 데이터 처리  ############################################################# -->
	<!-- 메타 컬럼 목록 조회 -->
	<select id="getMetaColumnList" parameterType="metaColumnVO" resultType="metaColumnVO">
		<if test='tblNo != 0'>
		SELECT COL_NO
			 , TBL_NO
			 , COL_NM
			 , COL_DATA_TY
			 , COL_DATA_TY_JDBC
			 , COL_DESC
			 , COL_ALIAS
		  FROM NEO_METACOLUMN
		 WHERE TBL_NO = #{tblNo}
		 ORDER BY COL_NM
		</if>
		<if test='tblNo == 0'>
		SELECT COL_NO
			 , TBL_NO
			 , COL_NM
			 , COL_DATA_TY
			 , COL_DATA_TY_JDBC
			 , COL_DESC
			 , COL_ALIAS
		  FROM NEO_METACOLUMN
		 WHERE TBL_NO IN (SELECT TBL_NO FROM NEO_METATABLE WHERE DB_CONN_NO = #{dbConnNo})
		 ORDER BY COL_NO
		 </if>
	</select>
	
	<!-- 메타 컬럼 정보 등록 -->
	<insert id="insertMetaColumnInfo" parameterType="metaColumnVO">
		INSERT INTO NEO_METACOLUMN
		(
			  COL_NO
			, TBL_NO
			, COL_NM
			, COL_DATA_TY
			, COL_DATA_TY_JDBC
			, COL_DESC
			, COL_ALIAS
		)
		VALUES
		(
			  NEO_METACOLUMN_SEQ.NEXTVAL
			, #{tblNo}
			, #{colNm}
			, #{colDataTy}
			, #{colDataTyJdbc}
			, #{colDesc}
			, #{colAlias}
		)
	</insert>
	
	<!-- 메타 컬럼 정보 등록 -->
	<update id="updateMetaColumnInfo" parameterType="metaColumnVO">
		UPDATE NEO_METACOLUMN
		   SET COL_ALIAS = #{colAlias}
			 , COL_DESC = #{colDesc}
		 WHERE COL_NO = #{colNo}
	</update>
	
	<!-- 메타 컬럼 삭제 : 관계식 삭제 -> 관계값 삭제 -> 메타컬럼 삭제 -->
	<delete id="deleteMetaColumnOperator" parameterType="_int">
		DELETE FROM NEO_OPERATOR
		 WHERE COL_NO = #{colNo}
	</delete>
	<delete id="deleteMetaColumnValue" parameterType="_int">
		DELETE FROM NEO_VALUE
		 WHERE COL_NO = #{colNo}
	</delete>
	<delete id="deleteMetaColumnInfo" parameterType="_int">
		DELETE FROM NEO_METACOLUMN
			WHERE COL_NO = #{colNo}
	</delete>
	 

	<!-- #############################################################  메타 관계식 데이터 처리  ############################################################# -->
	<!-- 메타 관계식 정보 조회 -->
	<select id="getMetaOperatorList" parameterType="metaOperatorVO" resultType="metaOperatorVO">
		SELECT A.OPER_NO
			 , A.COL_NO
			 , A.OPER_CD
			 , B.CD_NM OPER_NM
			 , B.CD_DTL
			 , B.CD_DTL OPER_ALIAS
		  FROM NEO_OPERATOR A
			 , (
				SELECT CD, CD_NM, CD_DTL
				  FROM NEO_CD
				 WHERE CD_GRP = 'C037'
				   AND UILANG = #{uilang}
				   AND USE_YN = 'Y'
				) B
		 WHERE A.COL_NO = #{colNo}
		   AND A.OPER_CD = B.CD
		 ORDER BY OPER_NO
	</select>
	
	<!-- 메타 관계식 정보 등록 -->
	<insert id="insertMetaOperatorInfo" parameterType="metaOperatorVO">
		INSERT INTO NEO_OPERATOR
		(
			  OPER_NO
			, COL_NO
			, OPER_CD
		)
		VALUES
		(
			  NEO_OPERATOR_SEQ.NEXTVAL
			, #{colNo}
			, #{operCd}
		)
	</insert>
</mapper>