<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.enders.ums.ems.cam.dao.CampaignMapper">

	<select id="getCampaignList" parameterType="campaignVO" resultType="campaignVO">
		SELECT *
		  FROM (
				SELECT A.CAMP_NO
					 , A.CAMP_NM
					 , A.USER_ID
					 , A.CAMP_TY
					 , A.STATUS
					 , A.DEPT_NO
					 , A.REG_DT
					 , A.REG_ID
					 , A.UP_ID
					 , A.UP_DT
					 , A.CAMP_DESC
					 , B.USER_NM
					 , C.USER_NM REG_NM
					 , D.DEPT_NM
					 , E.CD_NM CAMP_TY_NM
					 , F.CD_NM STATUS_NM
					 , ROW_NUMBER() OVER (ORDER BY CAMP_NO DESC) SEQ
					 , COUNT(1) OVER() TOTAL_COUNT
				  FROM NEO_CAMPAIGN A
					 , NEO_USER B
					 , NEO_USER C
					 , NEO_DEPT D
					 , (SELECT CD, CD_NM FROM NEO_CD WHERE CD_GRP = 'C004' AND UILANG = #{uilang}) E
					 , (SELECT CD, CD_NM FROM NEO_CD WHERE CD_GRP = 'C014' AND UILANG = #{uilang}) F
				 WHERE A.USER_ID = B.USER_ID
				   AND A.REG_ID = C.USER_ID
				   AND A.DEPT_NO = D.DEPT_NO
				   AND A.CAMP_TY = E.CD
				   AND A.STATUS = F.CD
				   <if test="searchCampNm != null and searchCampNm != ''">
				   AND A.CAMP_NM LIKE '%' || #{searchCampNm} || '%'
				   </if>
				   <if test="searchCampTy != null and searchCampTy != ''">
				   AND A.CAMP_TY = #{searchCampTy}
				   </if>
				   <if test='searchStatus != null and searchStatus != "ALL"'>
				   AND A.STATUS = #{searchStatus}
				   </if>
				   <if test='adminYn == "N"'>
				   AND A.DEPT_NO = #{deptNo}
				   </if>
				   <if test="searchDeptNo != 0">
				   AND A.DEPT_NO = #{searchDeptNo}
				   </if>
				   <if test="searchUserId != null and searchUserId != ''">
				   AND A.USER_ID = #{searchUserId}
				   </if>
				   <if test="searchStartDt != null and searchStartDt != ''">
				   AND A.REG_DT &gt;= #{searchStartDt} || '000000'
				   </if>
				   <if test="searchEndDt != null and searchEndDt != ''">
				   AND A.REG_DT &lt; #{searchEndDt} || '240000'
				   </if>
				)
		 WHERE SEQ BETWEEN (#{page}-1)*#{rows}+1 AND #{page}*#{rows}
	</select>
	
	<select id="getCampaignInfo" parameterType="campaignVO" resultType="campaignVO">
		SELECT A.CAMP_NO
			 , A.CAMP_NM
			 , A.USER_ID
			 , A.CAMP_TY
			 , A.STATUS
			 , A.DEPT_NO
			 , A.REG_DT
			 , A.REG_ID
			 , A.UP_ID
			 , A.UP_DT
			 , A.CAMP_DESC
			 , B.USER_NM
			 , C.USER_NM REG_NM
			 , D.DEPT_NM
			 , E.CD_NM CAMP_TY_NM
			 , F.CD_NM STATUS_NM
		  FROM NEO_CAMPAIGN A
			 , NEO_USER B
			 , NEO_USER C
			 , NEO_DEPT D
			 , (SELECT CD, CD_NM FROM NEO_CD WHERE CD_GRP = 'C004' AND UILANG = #{uilang}) E
			 , (SELECT CD, CD_NM FROM NEO_CD WHERE CD_GRP = 'C014' AND UILANG = #{uilang}) F
		 WHERE A.USER_ID = B.USER_ID
		   AND A.REG_ID = C.USER_ID
		   AND A.DEPT_NO = D.DEPT_NO
		   AND A.CAMP_TY = E.CD
		   AND A.STATUS = F.CD
		   AND A.CAMP_NO = #{campNo}
	</select>
	
	<insert id="insertCampaignInfo" parameterType="campaignVO">
		INSERT INTO NEO_CAMPAIGN
		(
			  CAMP_NO
			, CAMP_NM
			, CAMP_DESC
			, USER_ID
			, CAMP_TY
			, STATUS
			, DEPT_NO
			, REG_DT
			, REG_ID
			, UP_ID
			, UP_DT 
		)
		VALUES
		(
			  NEO_CAMPAIGN_SEQ.NEXTVAL
			, #{campNm}
			, #{campDesc}
			, #{userId}
			, #{campTy}
			, #{status}
			, #{deptNo}
			, #{regDt}
			, #{regId}
			, NULL
			, NULL 
		)
	</insert>
	
	<update id="updateCampaignInfo" parameterType="campaignVO">
		UPDATE NEO_CAMPAIGN
		   SET CAMP_NM   = #{campNm}
			 , CAMP_DESC = #{campDesc}
			 , USER_ID   = #{userId}
			 , CAMP_TY   = #{campTy}
			 , STATUS    = #{status}
			 , DEPT_NO   = #{deptNo}
			 , UP_ID     = #{upId}
			 , UP_DT     = #{upDt}
		 WHERE CAMP_NO   = #{campNo}
	</update>
	
	<select id="getMailList" parameterType="taskVO" resultType="taskVO">
		SELECT *
		  FROM (
				SELECT NEO_TASK.TASK_NO
					 , NEO_SUBTASK.SUB_TASK_NO
					 , TASK_NM
					 , NEO_TASK.SEG_NO
					 , SEG_NM
					 , SEND_REPEAT_CD.CD_NM SEND_REPEAT_NM
					 , SEND_REPEAT_CD.CD SEND_REPEAT
					 , NEO_TASK.USER_ID
					 , SEND_DT
					 , WORK_STATUS_CD.CD_NM WORK_STATUS_NM
					 , WORK_STATUS_CD.CD WORK_STATUS
					 , WORK_STATUS_CD.CD_DTL WORK_STATUS_DTL
					 , STATUS_CD.CD STATUS
					 , STATUS_CD.CD_NM STATUS_NM
					 , DB_CONN_NO
					 , SELECT_ SELECT_SQL
					 , FROM_ FROM_SQL
					 , WHERE_ WHERE_SQL
					 , ORDERBY_ ORDERBY_SQL
					 , MERGE_KEY
					 , MERGE_COL
					 , SEG_FL_PATH
					 , DEPT_NM
					 , NEO_CAMPAIGN.CAMP_NO
					 , CAMP_NM
					 , SUB_STATUS_CD.CD SUB_STATUS
					 , SUB_STATUS_CD.CD_NM SUB_STATUS_NM
					 , ROW_NUMBER() OVER (ORDER BY NEO_TASK.TASK_NO DESC, NEO_SUBTASK.SUB_TASK_NO DESC) SEQ
					 , COUNT(1) OVER() TOTAL_COUNT
				  FROM NEO_TASK
					 , NEO_SUBTASK
					 , NEO_SEGMENT
					 , NEO_CAMPAIGN
					 , NEO_CD SEND_REPEAT_CD
					 , NEO_CD WORK_STATUS_CD
					 , NEO_CD STATUS_CD
					 , NEO_DEPT
					 , NEO_CD SUB_STATUS_CD
				 WHERE SEND_REPEAT_CD.CD_GRP = 'C017'
				   AND SEND_REPEAT_CD.UILANG = #{uilang}
				   AND WORK_STATUS_CD.CD_GRP = 'C034'
				   AND WORK_STATUS_CD.UILANG = #{uilang}
				   AND STATUS_CD.CD_GRP = 'C023'
				   AND STATUS_CD.UILANG = #{uilang}
				   AND SUB_STATUS_CD.CD_GRP = 'C023'
				   AND SUB_STATUS_CD.UILANG = #{uilang}
				   AND NEO_SUBTASK.SEND_TEST_YN = 'N'
				   AND NEO_TASK.TASK_NO = NEO_SUBTASK.TASK_NO
				   AND NEO_TASK.SEG_NO = NEO_SEGMENT.SEG_NO
				   AND NEO_TASK.SEND_REPEAT = SEND_REPEAT_CD.CD
				   AND NEO_TASK.STATUS = STATUS_CD.CD
				   AND NEO_SUBTASK.STATUS = SUB_STATUS_CD.CD
				   AND NEO_SUBTASK.WORK_STATUS = WORK_STATUS_CD.CD
				   AND NEO_TASK.DEPT_NO = NEO_DEPT.DEPT_NO
				   AND NEO_TASK.CAMP_NO = NEO_CAMPAIGN.CAMP_NO
				   <if test='adminYn == "N"'>
				   AND NEO_TASK.DEPT_NO = #{searchDeptNo}
				   </if>
				   <if test="searchCampNo != 0">
				   AND NEO_TASK.CAMP_NO = #{searchCampNo}
				   </if>
				   <if test="searchTaskNm != null and searchTaskNm != ''">
				   AND NEO_TASK.TASK_NM LIKE '%' || #{searchTaskNm} || '%'
				   </if>
				   <if test="searchDeptNo != 0">
				   AND NEO_TASK.DEPT_NO = #{searchDeptNo}
				   </if>
				   <if test='searchStatus != null and searchStatus != "ALL"'>
				   AND NEO_TASK.STATUS = #{searchStatus}
				   </if>
				   <if test="searchWorkStatus != null and searchWorkStatus != ''">
				   		<if test='searchWorkStatus == "004"'>
				   		AND NEO_SUBTASK.WORK_STATUS NOT IN ('000', '001', '002', '003')
				   		</if>
				   		<if test='searchWorkStatus != "004"'>
				   			AND NEO_SUBTASK.WORK_STATUS IN
				   			<foreach collection="searchWorkStatusList" item="item" open="(" close=")" separator=",">
				   			#{item}
				   			</foreach>
				   		</if>
				   </if>
				   <if test="searchStartDt != null and searchStartDt != ''">
				   AND NEO_SUBTASK.SEND_DT &gt;= #{searchStartDt} || '000000'
				   </if>
				   <if test="searchEndDt != null and searchEndDt != ''">
				   AND NEO_SUBTASK.SEND_DT &lt; #{searchEndDt} || '240000'
				   </if>
				   <if test="searchUserId != null and searchUserId != ''">
				   AND NEO_TASK.USER_ID = #{searchUserId}
				   </if>
				)
		 WHERE SEQ BETWEEN (#{page}-1)*#{rows}+1 AND #{page}*#{rows}
	</select>
	
	<update id="updateTaskStatus" parameterType="taskVO">
		UPDATE NEO_TASK
		   SET RECO_STATUS = #{recoStatus}
			 , EXE_USER_ID = #{exeUserId}
		 WHERE TASK_NO     = #{taskNo}
	</update>
	
	<update id="updateSubTaskStatus" parameterType="taskVO">
		UPDATE NEO_SUBTASK
		   SET WORK_STATUS = #{workStatus}
		 WHERE TASK_NO     = #{taskNo}
		   AND SUB_TASK_NO = #{subTaskNo}
	</update>
	
	
	<insert id="insertTaskInfo" parameterType="taskVO">
		INSERT INTO NEO_TASK
		(
			  TASK_NO
			, PLAN_USER_ID
			, USER_ID
			, MAIL_FROM_NM
			, MAIL_FROM_EM
			, REPLY_TO_EM
			, RETURN_EM
			, NM_MERGE
			, ATT_CNT
			, SEND_REPEAT
			, CHANNEL
			, RESP_LOG
			, CONT_TY
			, SEND_TERM_END_DT
			, SEND_TERM_LOOP
			, SEND_TERM_LOOP_TY
			, SOCKET_TIMEOUT
			, CONN_PER_CNT
			, RETRY_CNT
			, SEND_MODE
			, HEADER_ENC
			, BODY_ENC
			, CHARSET
			, SEG_NO
			, CAMP_TY
			, CAMP_NO
			, DEPT_NO
			, CONT_FL_PATH
			, SEND_UNIT_COST
			, STATUS
			, RECO_STATUS
			, MAIL_TITLE
			, SURVEYNO
			, REG_ID
			, REG_DT
			, TASK_NM
			, RESP_YN
			, LINK_YN
		)
		VALUES
		(
			  NEO_TASK_SEQ.NEXTVAL
			, #{planUserId}
			, #{userId}
			, #{mailFromNm}
			, #{mailFromEm}
			, #{replyToEm}
			, #{returnEm}
			, #{nmMerge}
			, #{attCnt}
			, #{sendRepeat}
			, #{channel}
			, #{respLog}
			, #{contTy}
			, #{sendTermEndDt}
			, #{sendTermLoop}
			, #{sendTermLoopTy}
			, #{socketTimeout}
			, #{connPerCnt}
			, #{retryCnt}
			, #{sendMode}
			, #{headerEnc}
			, #{bodyEnc}
			, #{charset}
			, #{segNo}
			, #{campTy}
			, #{campNo}
			, #{deptNo}
			, #{contFlPath}
			, #{sendUnitCost}
			, #{status}
			, #{recoStatus}
			, #{mailTitle}
			, #{surveyno}
			, #{regId}
			, #{regDt}
			, #{taskNm}
			, #{respYn}
			, #{linkYn}
		)
	</insert>
	<select id="getTaskNo" resultType="_int">
		SELECT NEO_TASK_SEQ.CURRVAL SEQ FROM DUAL
	</select>
	<select id="getSubTaskNo" parameterType="_int" resultType="_int">
		SELECT NVL(MAX(SUB_TASK_NO),0)+1 I_MAX 
		  FROM NEO_SUBTASK
		 WHERE TASK_NO = #{taskNo}
	</select>
	<insert id="insertSubTaskInfo" parameterType="taskVO">
		INSERT INTO NEO_SUBTASK
		(
			  TASK_NO
			, SUB_TASK_NO
			, SEND_DT
			, RESP_END_DT
			, WORK_STATUS
			, RETRY_CNT
			, SEND_TEST_YN
			, SEND_TEST_EM
			, SEND_IP
			, CHANNEL
			, STATUS
		)
		VALUES
		(
			  #{taskNo}
			, #{subTaskNo}
			, #{sendDt}
			, #{respEndDt}
			, #{workStatus}
			, #{retryCnt}
			, #{sendTestYn}
			, #{sendTestEm}
			, #{sendIp}
			, #{channel}
			, #{status}
		)
	</insert>
	<insert id="insertAttachInfo" parameterType="attachVO">
		INSERT INTO NEO_ATTACH
		(
			  ATT_NO
			, ATT_NM
			, ATT_FL_PATH
			, TASK_NO
			, ATT_FL_SIZE
		)
		VALUES
		(
			  NEO_ATTACH_SEQ.NEXTVAL
			, #{attNm}
			, #{attFlPath}
			, #{taskNo}
			, #{attFlSize}
		)
	</insert>
	<insert id="insertLinkInfo" parameterType="linkVO">
		INSERT INTO NEO_LINK
		(
			  LINK_NO
			, LINK_URL
			, LINK_NM
			, ALIAS_NM
			, LINK_TY
			, REG_ID
			, REG_DT
		)
		VALUES
		(
			  #{linkNo}
			, #{linkUrl}
			, #{linkNm}
			, #{aliasNm}
			, #{linkTy}
			, #{regId}
			, #{regDt}
		)
	</insert>
	

</mapper>